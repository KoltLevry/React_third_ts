import { useState } from "react";
import axios from "axios";

import Button from "../../../Button/Button";
import {
  MyTakWrapper,
  SimpleText,
  TitleSecond,
  Text,
  List,
  ListItem,
  TitleFirst,
  TryCodeBlock,
  ResultBlock,
  ButtonWrapper,
  // ExtraSpinner,
} from "./styles";

function MyTask_04() {
  //   useEffect(() => {
  //     console.log("Mountained");
  //   }, []);
  
  const [data, setData] = useState(null);

  // joke ‚Äì –∑–±–µ—Ä—ñ–≥–∞—î –∂–∞—Ä—Ç, —è–∫–∏–π –º–∏ –æ—Ç—Ä–∏–º—É—î–º–æ –∑ API.
  const [joke, setJoke] = useState<string>("");

  const fetchJokeData = async () => {
      const JOKE_URL: string = 'https://official-joke-api.appspot.com/jokes/random';

      try {
        const result = await axios.get(JOKE_URL);
        setJoke(`${result.data.setup} - ${result.data.punchline}`)
      } catch {
        setJoke("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∂–∞—Ä—Ç üò¢");
      }
  }

  return (
    <>
      <MyTakWrapper>

        <TitleFirst>1. fetch vs. axios</TitleFirst>
        <SimpleText>
          <TitleSecond>
            fetch ‚Äì –≤–±—É–¥–æ–≤–∞–Ω–∏–π —É –±—Ä–∞—É–∑–µ—Ä API –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤ HTTP.
          </TitleSecond>
          <List>
            <ListItem>
              –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î Promise, —Ç–æ–º—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—Ä—É—á–Ω—É –≤–∏–∫–ª–∏–∫–∞—Ç–∏ .json(), —â–æ–±
              –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç—ñ–ª–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.
            </ListItem>
            <ListItem>
              {" "}
              –ù–µ –æ–±—Ä–æ–±–ª—è—î –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–º–∏–ª–∫–∏ —Å—Ç–∞—Ç—É—Å—É (404, 500), –ø–æ—Ç—Ä—ñ–±–Ω–æ
              –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ response.ok.
            </ListItem>
            <ListItem>
              –ù–µ –º–∞—î –≤–±—É–¥–æ–≤–∞–Ω–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —Ç–∞–π–º-–∞—É—Ç—ñ–≤, –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏—Ö –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤,
              —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤.
            </ListItem>
          </List>
        </SimpleText>

        <SimpleText>
          <TitleSecond>
            axios ‚Äì –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –¥–ª—è HTTP-–∑–∞–ø–∏—Ç—ñ–≤, —è–∫–∞ —Å–ø—Ä–æ—â—É—î —Ä–æ–±–æ—Ç—É –∑ API.
          </TitleSecond>
          <List>
            <ListItem>–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ —É JSON.</ListItem>
            <ListItem>–û–±—Ä–æ–±–ª—è—î –ø–æ–º–∏–ª–∫–∏ –∑–∞–ø–∏—Ç—ñ–≤.</ListItem>
            <ListItem>
              –ü—ñ–¥—Ç—Ä–∏–º—É—î —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤ —á–µ—Ä–µ–∑ AbortController –∞–±–æ
              CancelToken.
            </ListItem>
            <ListItem>–õ–µ–≥—à–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ —Ç–∞ —Ç–∞–π–º-–∞—É—Ç–∞–º–∏.</ListItem>
          </List>
        </SimpleText>

        <TitleFirst>2. useEffect ‚Äì –æ—Å–Ω–æ–≤–∏</TitleFirst>
        <SimpleText>
          <Text>
            useEffect –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –≤–∏–∫–ª–∏–∫—É –ø–æ–±—ñ—á–Ω–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤ —É
            React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è HTTP-–∑–∞–ø–∏—Ç—ñ–≤ –ø—Ä–∏
            –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏.
          </Text>
          <TryCodeBlock></TryCodeBlock>
        </SimpleText>

        <TitleFirst>3. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è axios –∑ useEffect</TitleFirst>
        <SimpleText>
          <Text>–ü—Ä–∏ –∑–∞–ø–∏—Ç–∞—Ö –¥–æ API –≤–∞–∂–ª–∏–≤–æ:</Text>
          <List>
            <ListItem>
              –í–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç —É useEffect, —â–æ–± –≤—ñ–Ω –∑–∞–ø—É—Å–∫–∞–≤—Å—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
              –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
            </ListItem>
            <ListItem>–û–±—Ä–æ–±–ª—è—Ç–∏ –ø–æ–º–∏–ª–∫–∏.</ListItem>
            <ListItem>
              –°–∫–∞—Å–æ–≤—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç–∏ –ø—Ä–∏ —Ä–æ–∑–º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
            </ListItem>
          </List>
          <Text>{data ? data.title : "Loading..."}</Text>
        </SimpleText>

        <SimpleText>
          <ButtonWrapper><Button name="Get Joke!" onClick={fetchJokeData}></Button></ButtonWrapper>
          <ResultBlock>{joke}</ResultBlock>
          {/* <ButtonWrapper><ExtraSpinner></ExtraSpinner></ButtonWrapper> */}
        </SimpleText>

      </MyTakWrapper>
    </>
  );
}

export default MyTask_04;
